{"ast":null,"code":"import { useMemo } from 'react';\nexport var useCreateChatContext = function useCreateChatContext(value) {\n  var _a;\n  var channel = value.channel,\n    channelsQueryState = value.channelsQueryState,\n    client = value.client,\n    closeMobileNav = value.closeMobileNav,\n    customClasses = value.customClasses,\n    getAppSettings = value.getAppSettings,\n    latestMessageDatesByChannels = value.latestMessageDatesByChannels,\n    mutes = value.mutes,\n    navOpen = value.navOpen,\n    openMobileNav = value.openMobileNav,\n    setActiveChannel = value.setActiveChannel,\n    theme = value.theme,\n    themeVersion = value.themeVersion,\n    useImageFlagEmojisOnWindows = value.useImageFlagEmojisOnWindows;\n  var channelCid = channel === null || channel === void 0 ? void 0 : channel.cid;\n  var channelsQueryError = channelsQueryState.error;\n  var channelsQueryInProgress = channelsQueryState.queryInProgress;\n  var clientValues = \"\".concat(client.clientID).concat(Object.keys(client.activeChannels).length).concat(Object.keys(client.listeners).length).concat(client.mutedChannels.length, \"\\n  \").concat((_a = client.user) === null || _a === void 0 ? void 0 : _a.id);\n  var mutedUsersLength = mutes.length;\n  var chatContext = useMemo(function () {\n    return {\n      channel: channel,\n      channelsQueryState: channelsQueryState,\n      client: client,\n      closeMobileNav: closeMobileNav,\n      customClasses: customClasses,\n      getAppSettings: getAppSettings,\n      latestMessageDatesByChannels: latestMessageDatesByChannels,\n      mutes: mutes,\n      navOpen: navOpen,\n      openMobileNav: openMobileNav,\n      setActiveChannel: setActiveChannel,\n      theme: theme,\n      themeVersion: themeVersion,\n      useImageFlagEmojisOnWindows: useImageFlagEmojisOnWindows\n    };\n  }, [channelCid, channelsQueryError, channelsQueryInProgress, clientValues, getAppSettings, mutedUsersLength, navOpen]);\n  return chatContext;\n};","map":null,"metadata":{},"sourceType":"module"}