{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/ebubechi/Desktop/UniVerse/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/Users/ebubechi/Desktop/UniVerse/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"/Users/ebubechi/Desktop/UniVerse/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"/Users/ebubechi/Desktop/UniVerse/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"/Users/ebubechi/Desktop/UniVerse/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\nvar XmlElement = require('./XmlElement');\nvar XmlNode = require('./XmlNode');\n\n/**\nRepresents an XML document. All elements within the document are descendants of\nthis node.\n\n@public\n*/\nvar XmlDocument = /*#__PURE__*/function (_XmlNode) {\n  _inherits(XmlDocument, _XmlNode);\n  /**\n  @param {Array<XmlComment|XmlElement|XmlProcessingInstruction>} [children]\n  */\n  function XmlDocument() {\n    var _this;\n    var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    _classCallCheck(this, XmlDocument);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(XmlDocument).call(this));\n\n    /**\n    Child nodes of this document.\n     @type {Array<XmlComment|XmlElement|XmlProcessingInstruction>}\n    @public\n    */\n    _this.children = children;\n    return _this;\n  }\n  _createClass(XmlDocument, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return Object.assign(XmlNode.prototype.toJSON.call(this), {\n        children: this.children.map(function (child) {\n          return child.toJSON();\n        })\n      });\n    }\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this;\n    }\n    /**\n    Root element of this document, or `null` if this document is empty.\n     @type {XmlElement?}\n    @public\n    */\n  }, {\n    key: \"root\",\n    get: function get() {\n      // @ts-ignore\n      return this.children.find(function (child) {\n        return child instanceof XmlElement;\n      }) || null;\n    }\n    /**\n    Text content of this document and all its descendants.\n     @type {string}\n    @public\n    */\n  }, {\n    key: \"text\",\n    get: function get() {\n      return this.children.map(function (child) {\n        return 'text' in child ? child.text : '';\n      }).join('');\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return XmlNode.TYPE_DOCUMENT;\n    }\n  }]);\n  return XmlDocument;\n}(XmlNode);\nmodule.exports = XmlDocument;\n\n/** @typedef {import('./XmlComment')} XmlComment */\n/** @typedef {import('./XmlProcessingInstruction')} XmlProcessingInstruction */","map":null,"metadata":{},"sourceType":"script"}