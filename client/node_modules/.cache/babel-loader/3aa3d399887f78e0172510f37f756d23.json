{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport { CustomNotification } from './CustomNotification';\nimport { useChatContext, useTranslationContext } from '../../context';\nvar UnMemoizedConnectionStatus = function UnMemoizedConnectionStatus() {\n  var client = useChatContext('ConnectionStatus').client;\n  var t = useTranslationContext('ConnectionStatus').t;\n  var _a = useState(true),\n    online = _a[0],\n    setOnline = _a[1];\n  useEffect(function () {\n    var connectionChanged = function connectionChanged(_a) {\n      var _b = _a.online,\n        onlineStatus = _b === void 0 ? false : _b;\n      if (online !== onlineStatus) {\n        setOnline(onlineStatus);\n      }\n    };\n    client.on('connection.changed', connectionChanged);\n    return function () {\n      return client.off('connection.changed', connectionChanged);\n    };\n  }, [client, online]);\n  return React.createElement(CustomNotification, {\n    active: !online,\n    className: 'str-chat__connection-status-notification',\n    type: 'error'\n  }, t('Connection failure, reconnecting now...'));\n};\nexport var ConnectionStatus = React.memo(UnMemoizedConnectionStatus);","map":null,"metadata":{},"sourceType":"module"}