{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React, { useCallback, useEffect, useLayoutEffect, useRef } from 'react';\nimport { deprecationAndReplacementWarning } from '../../utils/deprecationWarning';\n/**\n * Prevents Chrome hangups\n * See: https://stackoverflow.com/questions/47524205/random-high-content-download-time-in-chrome/47684257#47684257\n */\nvar mousewheelListener = function mousewheelListener(event) {\n  if (event instanceof WheelEvent && event.deltaY === 1) {\n    event.preventDefault();\n  }\n};\nexport var InfiniteScroll = function InfiniteScroll(props) {\n  var children = props.children,\n    _a = props.element,\n    element = _a === void 0 ? 'div' : _a,\n    hasMore = props.hasMore,\n    hasMoreNewer = props.hasMoreNewer,\n    hasNextPage = props.hasNextPage,\n    hasPreviousPage = props.hasPreviousPage,\n    head = props.head,\n    _b = props.initialLoad,\n    initialLoad = _b === void 0 ? true : _b,\n    isLoading = props.isLoading,\n    listenToScroll = props.listenToScroll,\n    loader = props.loader,\n    loadMore = props.loadMore,\n    loadMoreNewer = props.loadMoreNewer,\n    loadNextPage = props.loadNextPage,\n    loadPreviousPage = props.loadPreviousPage,\n    _c = props.threshold,\n    threshold = _c === void 0 ? 250 : _c,\n    _d = props.useCapture,\n    useCapture = _d === void 0 ? false : _d,\n    elementProps = __rest(props, [\"children\", \"element\", \"hasMore\", \"hasMoreNewer\", \"hasNextPage\", \"hasPreviousPage\", \"head\", \"initialLoad\", \"isLoading\", \"listenToScroll\", \"loader\", \"loadMore\", \"loadMoreNewer\", \"loadNextPage\", \"loadPreviousPage\", \"threshold\", \"useCapture\"]);\n  var loadNextPageFn = loadNextPage || loadMoreNewer;\n  var loadPreviousPageFn = loadPreviousPage || loadMore;\n  var hasNextPageFlag = hasNextPage || hasMoreNewer;\n  var hasPreviousPageFlag = hasPreviousPage || hasMore;\n  var scrollComponent = useRef();\n  var scrollListener = useCallback(function () {\n    var element = scrollComponent.current;\n    if (!element || element.offsetParent === null) {\n      return;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    var parentElement = element.parentElement;\n    var offset = element.scrollHeight - parentElement.scrollTop - parentElement.clientHeight;\n    var reverseOffset = parentElement.scrollTop;\n    if (listenToScroll) {\n      listenToScroll(offset, reverseOffset, threshold);\n    }\n    if (isLoading) return;\n    if (reverseOffset < Number(threshold) && typeof loadPreviousPageFn === 'function' && hasPreviousPageFlag) {\n      loadPreviousPageFn();\n    }\n    if (offset < Number(threshold) && typeof loadNextPageFn === 'function' && hasNextPageFlag) {\n      loadNextPageFn();\n    }\n  }, [hasPreviousPageFlag, hasNextPageFlag, isLoading, listenToScroll, loadPreviousPageFn, loadNextPageFn, threshold]);\n  useEffect(function () {\n    deprecationAndReplacementWarning([[{\n      hasMoreNewer: hasMoreNewer\n    }, {\n      hasNextPage: hasNextPage\n    }], [{\n      loadMoreNewer: loadMoreNewer\n    }, {\n      loadNextPage: loadNextPage\n    }], [{\n      hasMore: hasMore\n    }, {\n      hasPreviousPage: hasPreviousPage\n    }], [{\n      loadMore: loadMore\n    }, {\n      loadPreviousPage: loadPreviousPage\n    }]], 'InfiniteScroll');\n  }, []);\n  useLayoutEffect(function () {\n    var _a;\n    var scrollElement = (_a = scrollComponent.current) === null || _a === void 0 ? void 0 : _a.parentNode;\n    if (!scrollElement) return;\n    scrollElement.addEventListener('scroll', scrollListener, useCapture);\n    scrollElement.addEventListener('resize', scrollListener, useCapture);\n    return function () {\n      scrollElement.removeEventListener('scroll', scrollListener, useCapture);\n      scrollElement.removeEventListener('resize', scrollListener, useCapture);\n    };\n  }, [initialLoad, scrollListener, useCapture]);\n  useEffect(function () {\n    var _a;\n    var scrollElement = (_a = scrollComponent.current) === null || _a === void 0 ? void 0 : _a.parentNode;\n    if (scrollElement) {\n      scrollElement.addEventListener('wheel', mousewheelListener, {\n        passive: false\n      });\n    }\n    return function () {\n      if (scrollElement) {\n        scrollElement.removeEventListener('wheel', mousewheelListener, useCapture);\n      }\n    };\n  }, [useCapture]);\n  var attributes = __assign(__assign({}, elementProps), {\n    ref: function ref(element) {\n      scrollComponent.current = element;\n    }\n  });\n  var childrenArray = [loader, children];\n  if (head) {\n    childrenArray.unshift(head);\n  }\n  return React.createElement(element, attributes, childrenArray);\n};","map":null,"metadata":{},"sourceType":"module"}