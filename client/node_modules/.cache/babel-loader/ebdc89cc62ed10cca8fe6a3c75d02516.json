{"ast":null,"code":"import React from 'react';\nimport { MenuIcon as DefaultMenuIcon } from './icons';\nimport { Avatar as DefaultAvatar } from '../Avatar';\nimport { useChannelPreviewInfo } from '../ChannelPreview/hooks/useChannelPreviewInfo';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nvar UnMemoizedChannelHeader = function UnMemoizedChannelHeader(props) {\n  var _a = props.Avatar,\n    Avatar = _a === void 0 ? DefaultAvatar : _a,\n    _b = props.MenuIcon,\n    MenuIcon = _b === void 0 ? DefaultMenuIcon : _b,\n    overrideImage = props.image,\n    live = props.live,\n    overrideTitle = props.title;\n  var _c = useChannelStateContext('ChannelHeader'),\n    channel = _c.channel,\n    watcher_count = _c.watcher_count;\n  var openMobileNav = useChatContext('ChannelHeader').openMobileNav;\n  var t = useTranslationContext('ChannelHeader').t;\n  var _d = useChannelPreviewInfo({\n      channel: channel,\n      overrideImage: overrideImage,\n      overrideTitle: overrideTitle\n    }),\n    displayImage = _d.displayImage,\n    displayTitle = _d.displayTitle;\n  var _e = (channel === null || channel === void 0 ? void 0 : channel.data) || {},\n    member_count = _e.member_count,\n    subtitle = _e.subtitle;\n  return React.createElement(\"div\", {\n    className: 'str-chat__header-livestream str-chat__channel-header'\n  }, React.createElement(\"button\", {\n    \"aria-label\": 'Menu',\n    className: 'str-chat__header-hamburger',\n    onClick: openMobileNav\n  }, React.createElement(MenuIcon, null)), React.createElement(Avatar, {\n    image: displayImage,\n    name: displayTitle,\n    shape: 'rounded',\n    size: (channel === null || channel === void 0 ? void 0 : channel.type) === 'commerce' ? 60 : 40\n  }), React.createElement(\"div\", {\n    className: 'str-chat__header-livestream-left str-chat__channel-header-end'\n  }, React.createElement(\"p\", {\n    className: 'str-chat__header-livestream-left--title str-chat__channel-header-title'\n  }, displayTitle, ' ', live && React.createElement(\"span\", {\n    className: 'str-chat__header-livestream-left--livelabel'\n  }, t('live'))), subtitle && React.createElement(\"p\", {\n    className: 'str-chat__header-livestream-left--subtitle'\n  }, subtitle), React.createElement(\"p\", {\n    className: 'str-chat__header-livestream-left--members str-chat__channel-header-info'\n  }, !live && !!member_count && member_count > 0 && React.createElement(React.Fragment, null, t('{{ memberCount }} members', {\n    memberCount: member_count\n  }), \",\", ' '), t('{{ watcherCount }} online', {\n    watcherCount: watcher_count\n  }))));\n};\n/**\n * The ChannelHeader component renders some basic information about a Channel.\n */\nexport var ChannelHeader = React.memo(UnMemoizedChannelHeader);","map":null,"metadata":{},"sourceType":"module"}