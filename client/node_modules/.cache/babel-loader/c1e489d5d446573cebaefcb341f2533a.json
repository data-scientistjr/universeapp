{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport React from 'react';\nimport { ImageDropzone } from 'react-file-utils';\nimport { useCooldownTimer } from './hooks/useCooldownTimer';\nimport { useCreateMessageInputContext } from './hooks/useCreateMessageInputContext';\nimport { useMessageInputState } from './hooks/useMessageInputState';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { MessageInputContextProvider, useMessageInputContext } from '../../context/MessageInputContext';\nvar DropzoneInner = function DropzoneInner(_a) {\n  var children = _a.children;\n  var _b = useChannelStateContext('DropzoneProvider'),\n    acceptedFiles = _b.acceptedFiles,\n    multipleUploads = _b.multipleUploads;\n  var _c = useMessageInputContext('DropzoneProvider'),\n    cooldownRemaining = _c.cooldownRemaining,\n    isUploadEnabled = _c.isUploadEnabled,\n    maxFilesLeft = _c.maxFilesLeft,\n    uploadNewFiles = _c.uploadNewFiles;\n  return React.createElement(ImageDropzone, {\n    accept: acceptedFiles,\n    disabled: !isUploadEnabled || maxFilesLeft === 0 || !!cooldownRemaining,\n    handleFiles: uploadNewFiles,\n    maxNumberOfFiles: maxFilesLeft,\n    multiple: multipleUploads\n  }, children);\n};\nexport var DropzoneProvider = function DropzoneProvider(props) {\n  var cooldownTimerState = useCooldownTimer();\n  var messageInputState = useMessageInputState(props);\n  var messageInputContextValue = useCreateMessageInputContext(__assign(__assign(__assign({}, cooldownTimerState), messageInputState), props));\n  return React.createElement(MessageInputContextProvider, {\n    value: messageInputContextValue\n  }, React.createElement(DropzoneInner, null, props.children));\n};","map":null,"metadata":{},"sourceType":"module"}