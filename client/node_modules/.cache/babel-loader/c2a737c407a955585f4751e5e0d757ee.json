{"ast":null,"code":"import { isDate, isDayOrMoment, isNumberOrString } from '../context';\nexport var notValidDateWarning = 'MessageTimestamp was called without a message, or message has invalid created_at date.';\nexport var noParsingFunctionWarning = 'MessageTimestamp was called but there is no datetime parsing function available';\nexport function getDateString(_a) {\n  var calendar = _a.calendar,\n    format = _a.format,\n    formatDate = _a.formatDate,\n    messageCreatedAt = _a.messageCreatedAt,\n    tDateTimeParser = _a.tDateTimeParser;\n  if (!messageCreatedAt || typeof messageCreatedAt === 'string' && !Date.parse(messageCreatedAt)) {\n    console.warn(notValidDateWarning);\n    return null;\n  }\n  if (typeof formatDate === 'function') {\n    return formatDate(new Date(messageCreatedAt));\n  }\n  if (!tDateTimeParser) {\n    console.warn(noParsingFunctionWarning);\n    return null;\n  }\n  var parsedTime = tDateTimeParser(messageCreatedAt);\n  if (isDayOrMoment(parsedTime)) {\n    /**\n     * parsedTime.calendar is guaranteed on the type but is only\n     * available when a user calls dayjs.extend(calendar)\n     */\n    return calendar && parsedTime.calendar ? parsedTime.calendar() : parsedTime.format(format);\n  }\n  if (isDate(parsedTime)) {\n    return parsedTime.toDateString();\n  }\n  if (isNumberOrString(parsedTime)) {\n    return parsedTime;\n  }\n  return null;\n}","map":null,"metadata":{},"sourceType":"module"}