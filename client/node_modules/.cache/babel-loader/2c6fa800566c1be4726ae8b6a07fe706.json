{"ast":null,"code":"import React, { useCallback } from 'react';\nimport { FileIcon } from 'react-file-utils';\nimport { useMessageInputContext } from '../../context/MessageInputContext';\nimport { useFileState } from './hooks/useFileState';\nimport { CloseIcon, DownloadIcon, LoadingIndicatorIcon, RetryIcon } from './icons';\nexport var AttachmentPreviewList = function AttachmentPreviewList() {\n  var _a = useMessageInputContext('AttachmentPreviewList'),\n    fileOrder = _a.fileOrder,\n    imageOrder = _a.imageOrder;\n  return React.createElement(\"div\", {\n    className: 'str-chat__attachment-preview-list'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__attachment-list-scroll-container',\n    \"data-testid\": 'attachment-list-scroll-container'\n  }, imageOrder.map(function (id) {\n    return React.createElement(ImagePreviewItem, {\n      id: id,\n      key: id\n    });\n  }), fileOrder.map(function (id) {\n    return React.createElement(FilePreviewItem, {\n      id: id,\n      key: id\n    });\n  })));\n};\nvar ImagePreviewItem = function ImagePreviewItem(_a) {\n  var _b;\n  var id = _a.id;\n  var _c = useMessageInputContext('ImagePreviewItem'),\n    imageUploads = _c.imageUploads,\n    removeImage = _c.removeImage,\n    uploadImage = _c.uploadImage;\n  var handleRemove = useCallback(function (e) {\n    e.stopPropagation();\n    removeImage(id);\n  }, [removeImage, id]);\n  var handleRetry = useCallback(function () {\n    return uploadImage(id);\n  }, [uploadImage, id]);\n  var image = imageUploads[id];\n  var state = useFileState(image);\n  // do not display scraped attachments\n  if (!image || image.og_scrape_url) return null;\n  return React.createElement(\"div\", {\n    className: 'str-chat__attachment-preview-image',\n    \"data-testid\": 'attachment-preview-image'\n  }, React.createElement(\"button\", {\n    className: 'str-chat__attachment-preview-delete',\n    \"data-testid\": 'image-preview-item-delete-button',\n    disabled: state.uploading,\n    onClick: handleRemove\n  }, React.createElement(CloseIcon, null)), state.failed && React.createElement(\"button\", {\n    className: 'str-chat__attachment-preview-error str-chat__attachment-preview-error-image',\n    \"data-testid\": 'image-preview-item-retry-button',\n    onClick: handleRetry\n  }, React.createElement(RetryIcon, null)), state.uploading && React.createElement(\"div\", {\n    className: 'str-chat__attachment-preview-image-loading'\n  }, React.createElement(LoadingIndicatorIcon, {\n    size: 17\n  })), (image.previewUri || image.url) && React.createElement(\"img\", {\n    alt: image.file.name,\n    className: 'str-chat__attachment-preview-thumbnail',\n    src: (_b = image.previewUri) !== null && _b !== void 0 ? _b : image.url\n  }));\n};\nvar FilePreviewItem = function FilePreviewItem(_a) {\n  var id = _a.id;\n  var _b = useMessageInputContext('FilePreviewItem'),\n    fileUploads = _b.fileUploads,\n    removeFile = _b.removeFile,\n    uploadFile = _b.uploadFile;\n  var handleRemove = useCallback(function (e) {\n    e.stopPropagation();\n    removeFile(id);\n  }, [removeFile, id]);\n  var handleRetry = useCallback(function () {\n    return uploadFile(id);\n  }, [uploadFile, id]);\n  var file = fileUploads[id];\n  var state = useFileState(file);\n  if (!file) return null;\n  return React.createElement(\"div\", {\n    className: 'str-chat__attachment-preview-file',\n    \"data-testid\": 'attachment-preview-file'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__attachment-preview-file-icon'\n  }, React.createElement(FileIcon, {\n    filename: file.file.name,\n    mimeType: file.file.type,\n    version: '2'\n  })), React.createElement(\"button\", {\n    className: 'str-chat__attachment-preview-delete',\n    \"data-testid\": 'file-preview-item-delete-button',\n    disabled: state.uploading,\n    onClick: handleRemove\n  }, React.createElement(CloseIcon, null)), state.failed && React.createElement(\"button\", {\n    className: 'str-chat__attachment-preview-error str-chat__attachment-preview-error-file',\n    \"data-testid\": 'file-preview-item-retry-button',\n    onClick: handleRetry\n  }, React.createElement(RetryIcon, null)), React.createElement(\"div\", {\n    className: 'str-chat__attachment-preview-file-end'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__attachment-preview-file-name'\n  }, file.file.name), state.finished && React.createElement(\"a\", {\n    className: 'str-chat__attachment-preview-file-download',\n    download: true,\n    href: file.url,\n    rel: 'noreferrer',\n    target: '_blank'\n  }, React.createElement(DownloadIcon, null)), state.uploading && React.createElement(LoadingIndicatorIcon, {\n    size: 17\n  })));\n};","map":null,"metadata":{},"sourceType":"module"}