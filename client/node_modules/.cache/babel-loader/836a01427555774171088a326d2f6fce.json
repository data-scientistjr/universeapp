{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport * as v1 from './FileIconSet/v1';\nimport * as v2 from './FileIconSet/v2';\nimport { archiveFileTypes, codeFileTypes, excelMimeTypes, powerpointMimeTypes, wordMimeTypes } from './mimeTypes';\nfunction generateMimeTypeToIconMap(_a) {\n  var FilePdfIcon = _a.FilePdfIcon,\n    FileWordIcon = _a.FileWordIcon,\n    FileExcelIcon = _a.FileExcelIcon,\n    FilePowerPointIcon = _a.FilePowerPointIcon,\n    FileArchiveIcon = _a.FileArchiveIcon,\n    FileCodeIcon = _a.FileCodeIcon;\n  var mimeTypeToIconMap = {\n    'application/pdf': FilePdfIcon\n  };\n  for (var _i = 0, wordMimeTypes_1 = wordMimeTypes; _i < wordMimeTypes_1.length; _i++) {\n    var type = wordMimeTypes_1[_i];\n    mimeTypeToIconMap[type] = FileWordIcon;\n  }\n  for (var _b = 0, excelMimeTypes_1 = excelMimeTypes; _b < excelMimeTypes_1.length; _b++) {\n    var type = excelMimeTypes_1[_b];\n    mimeTypeToIconMap[type] = FileExcelIcon;\n  }\n  for (var _c = 0, powerpointMimeTypes_1 = powerpointMimeTypes; _c < powerpointMimeTypes_1.length; _c++) {\n    var type = powerpointMimeTypes_1[_c];\n    mimeTypeToIconMap[type] = FilePowerPointIcon;\n  }\n  for (var _d = 0, archiveFileTypes_1 = archiveFileTypes; _d < archiveFileTypes_1.length; _d++) {\n    var type = archiveFileTypes_1[_d];\n    mimeTypeToIconMap[type] = FileArchiveIcon;\n  }\n  for (var _e = 0, codeFileTypes_1 = codeFileTypes; _e < codeFileTypes_1.length; _e++) {\n    var type = codeFileTypes_1[_e];\n    mimeTypeToIconMap[type] = FileCodeIcon;\n  }\n  return mimeTypeToIconMap;\n}\nfunction generateGeneralTypeToIconMap(_a) {\n  var FileAudioIcon = _a.FileAudioIcon,\n    FileVideoIcon = _a.FileVideoIcon,\n    FileImageIcon = _a.FileImageIcon,\n    FileAltIcon = _a.FileAltIcon;\n  return {\n    'audio/': FileAudioIcon,\n    'video/': FileVideoIcon,\n    'image/': FileImageIcon,\n    'text/': FileAltIcon\n  };\n}\nexport var iconMap = {\n  '1': {\n    standard: __assign(__assign(__assign({}, generateMimeTypeToIconMap({\n      FilePdfIcon: v1.FilePdfIcon,\n      FileWordIcon: v1.FileWordIcon,\n      FileExcelIcon: v1.FileExcelIcon,\n      FilePowerPointIcon: v1.FilePowerPointIcon,\n      FileArchiveIcon: v1.FileArchiveIcon,\n      FileCodeIcon: v1.FileCodeIcon\n    })), generateGeneralTypeToIconMap({\n      FileAltIcon: v1.FileAltIcon,\n      FileAudioIcon: v1.FileAudioIcon,\n      FileImageIcon: v1.FileImageIcon,\n      FileVideoIcon: v1.FileVideoIcon\n    })), {\n      fallback: v1.FileFallbackIcon\n    }),\n    alt: {}\n  },\n  '2': {\n    alt: __assign(__assign(__assign({}, generateMimeTypeToIconMap({\n      FilePdfIcon: v2.FilePdfIcon,\n      FileWordIcon: v2.FileWordIconAlt,\n      FileExcelIcon: v2.FileExcelIconAlt,\n      FilePowerPointIcon: v2.FilePowerPointIconAlt,\n      FileArchiveIcon: v2.FileArchiveIconAlt,\n      FileCodeIcon: v2.FileCodeIconAlt\n    })), generateGeneralTypeToIconMap({\n      FileAltIcon: v2.FileFallbackIcon,\n      FileAudioIcon: v2.FileAudioIconAlt,\n      FileImageIcon: v2.FileImageIcon,\n      FileVideoIcon: v2.FileVideoIconAlt\n    })), {\n      fallback: v2.FileFallbackIcon\n    }),\n    standard: __assign(__assign(__assign({}, generateMimeTypeToIconMap({\n      FilePdfIcon: v2.FilePdfIcon,\n      FileWordIcon: v2.FileWordIcon,\n      FileExcelIcon: v2.FileExcelIcon,\n      FilePowerPointIcon: v2.FilePowerPointIcon,\n      FileArchiveIcon: v2.FileArchiveIcon,\n      FileCodeIcon: v2.FileCodeIcon\n    })), generateGeneralTypeToIconMap({\n      FileAltIcon: v2.FileFallbackIcon,\n      FileAudioIcon: v2.FileAudioIcon,\n      FileImageIcon: v2.FileImageIcon,\n      FileVideoIcon: v2.FileVideoIcon\n    })), {\n      fallback: v2.FileFallbackIcon\n    })\n  }\n};","map":null,"metadata":{},"sourceType":"module"}