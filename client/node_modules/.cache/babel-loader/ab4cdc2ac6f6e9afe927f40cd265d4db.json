{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { FileUploadButton, ImageDropzone } from 'react-file-utils';\nimport { EmojiPicker } from './EmojiPicker';\nimport { EmojiIconSmall as DefaultEmojiIcon, FileUploadIcon as DefaultFileUploadIcon } from './icons';\nimport { UploadsPreview } from './UploadsPreview';\nimport { ChatAutoComplete } from '../ChatAutoComplete/ChatAutoComplete';\nimport { Tooltip } from '../Tooltip/Tooltip';\nimport { MessageInputFlat } from './MessageInputFlat';\nimport { useChannelStateContext, useChatContext, useComponentContext, useMessageInputContext, useTranslationContext } from '../../context';\nexport var EditMessageForm = function EditMessageForm() {\n  var _a = useChannelStateContext('EditMessageForm'),\n    acceptedFiles = _a.acceptedFiles,\n    multipleUploads = _a.multipleUploads;\n  var t = useTranslationContext('EditMessageForm').t;\n  var _b = useMessageInputContext('EditMessageForm'),\n    clearEditingState = _b.clearEditingState,\n    closeEmojiPicker = _b.closeEmojiPicker,\n    emojiPickerIsOpen = _b.emojiPickerIsOpen,\n    handleSubmit = _b.handleSubmit,\n    isUploadEnabled = _b.isUploadEnabled,\n    maxFilesLeft = _b.maxFilesLeft,\n    openEmojiPicker = _b.openEmojiPicker,\n    uploadNewFiles = _b.uploadNewFiles;\n  var _c = useComponentContext('EditMessageForm'),\n    _d = _c.EmojiIcon,\n    EmojiIcon = _d === void 0 ? DefaultEmojiIcon : _d,\n    _e = _c.FileUploadIcon,\n    FileUploadIcon = _e === void 0 ? DefaultFileUploadIcon : _e;\n  var themeVersion = useChatContext('EditMessageForm').themeVersion;\n  useEffect(function () {\n    var onKeyDown = function onKeyDown(event) {\n      if (event.key === 'Escape') clearEditingState === null || clearEditingState === void 0 ? void 0 : clearEditingState();\n    };\n    document.addEventListener('keydown', onKeyDown);\n    return function () {\n      return document.removeEventListener('keydown', onKeyDown);\n    };\n  }, [clearEditingState]);\n  if (themeVersion === '2') return React.createElement(\"form\", {\n    className: 'str-chat__edit-message-form',\n    onSubmit: handleSubmit\n  }, React.createElement(MessageInputFlat, null), React.createElement(\"div\", {\n    className: 'str-chat__edit-message-form-options'\n  }, React.createElement(\"button\", {\n    className: 'str-chat__edit-message-cancel',\n    \"data-testid\": 'cancel-button',\n    onClick: clearEditingState\n  }, t('Cancel')), React.createElement(\"button\", {\n    className: 'str-chat__edit-message-send',\n    \"data-testid\": 'send-button',\n    type: 'submit'\n  }, t('Send'))));\n  return React.createElement(\"div\", {\n    className: 'str-chat__edit-message-form'\n  }, React.createElement(ImageDropzone, {\n    accept: acceptedFiles,\n    disabled: !isUploadEnabled || maxFilesLeft === 0,\n    handleFiles: uploadNewFiles,\n    maxNumberOfFiles: maxFilesLeft,\n    multiple: multipleUploads\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, isUploadEnabled && React.createElement(UploadsPreview, null), React.createElement(EmojiPicker, {\n    small: true\n  }), React.createElement(ChatAutoComplete, null), React.createElement(\"div\", {\n    className: 'str-chat__message-team-form-footer'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__edit-message-form-options'\n  }, React.createElement(\"button\", {\n    \"aria-label\": 'Open Emoji Picker',\n    className: 'str-chat__input-emojiselect',\n    onClick: emojiPickerIsOpen ? closeEmojiPicker : openEmojiPicker\n  }, React.createElement(EmojiIcon, null)), isUploadEnabled && React.createElement(\"div\", {\n    className: 'str-chat__fileupload-wrapper',\n    \"data-testid\": 'fileinput'\n  }, React.createElement(Tooltip, null, maxFilesLeft ? t('Attach files') : t(\"You've reached the maximum number of files\")), React.createElement(FileUploadButton, {\n    accepts: acceptedFiles,\n    disabled: maxFilesLeft === 0,\n    handleFiles: uploadNewFiles,\n    multiple: multipleUploads\n  }, React.createElement(\"span\", {\n    className: 'str-chat__input-fileupload'\n  }, React.createElement(FileUploadIcon, null))))), React.createElement(\"div\", null, React.createElement(\"button\", {\n    className: 'str-chat__edit-message-cancel',\n    onClick: clearEditingState\n  }, t('Cancel')), React.createElement(\"button\", {\n    className: 'str-chat__edit-message-send',\n    type: 'submit'\n  }, t('Send')))))));\n};","map":null,"metadata":{},"sourceType":"module"}