{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport React, { useLayoutEffect, useRef, useState } from 'react';\nimport ReactPlayer from 'react-player';\nimport clsx from 'clsx';\nimport * as linkify from 'linkifyjs';\nimport { AttachmentActions as DefaultAttachmentActions } from './AttachmentActions';\nimport { Audio as DefaultAudio } from './Audio';\nimport { Gallery as DefaultGallery, ImageComponent as DefaultImage } from '../Gallery';\nimport { Card as DefaultCard } from './Card';\nimport { FileAttachment as DefaultFile } from './FileAttachment';\nimport { NullComponent as DefaultUnsupportedAttachment } from './UnsupportedAttachment';\nimport { isGalleryAttachmentType, isSvgAttachment } from './utils';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nexport var AttachmentWithinContainer = function AttachmentWithinContainer(_a) {\n  var _b;\n  var _c;\n  var attachment = _a.attachment,\n    children = _a.children,\n    componentType = _a.componentType;\n  var isGAT = isGalleryAttachmentType(attachment);\n  var extra = '';\n  if (!isGAT) {\n    extra = componentType === 'card' && !(attachment === null || attachment === void 0 ? void 0 : attachment.image_url) && !(attachment === null || attachment === void 0 ? void 0 : attachment.thumb_url) ? 'no-image' : ((_c = attachment === null || attachment === void 0 ? void 0 : attachment.actions) === null || _c === void 0 ? void 0 : _c.length) ? 'actions' : '';\n  }\n  var classNames = clsx('str-chat__message-attachment str-chat__message-attachment-dynamic-size', (_b = {}, _b[\"str-chat__message-attachment--\".concat(componentType)] = componentType, _b[\"str-chat__message-attachment--\".concat(attachment === null || attachment === void 0 ? void 0 : attachment.type)] = attachment === null || attachment === void 0 ? void 0 : attachment.type, _b[\"str-chat__message-attachment--\".concat(componentType, \"--\").concat(extra)] = componentType && extra, _b['str-chat__message-attachment--svg-image'] = isSvgAttachment(attachment), _b['str-chat__message-attachment-with-actions'] = extra === 'actions', _b));\n  return React.createElement(\"div\", {\n    className: classNames\n  }, children);\n};\nexport var AttachmentActionsContainer = function AttachmentActionsContainer(_a) {\n  var _b;\n  var actionHandler = _a.actionHandler,\n    attachment = _a.attachment,\n    _c = _a.AttachmentActions,\n    AttachmentActions = _c === void 0 ? DefaultAttachmentActions : _c;\n  if (!((_b = attachment.actions) === null || _b === void 0 ? void 0 : _b.length)) return null;\n  return React.createElement(AttachmentActions, __assign({}, attachment, {\n    actionHandler: actionHandler,\n    actions: attachment.actions,\n    id: attachment.id || '',\n    text: attachment.text || ''\n  }));\n};\nfunction getCssDimensionsVariables(url) {\n  var cssVars = {\n    '--original-height': 1000000,\n    '--original-width': 1000000\n  };\n  if (linkify.test(url, 'url')) {\n    var urlParams = new URL(url).searchParams;\n    var oh = Number(urlParams.get('oh'));\n    var ow = Number(urlParams.get('ow'));\n    var originalHeight = oh > 1 ? oh : 1000000;\n    var originalWidth = ow > 1 ? ow : 1000000;\n    cssVars['--original-width'] = originalWidth;\n    cssVars['--original-height'] = originalHeight;\n  }\n  return cssVars;\n}\nexport var GalleryContainer = function GalleryContainer(_a) {\n  var attachment = _a.attachment,\n    _b = _a.Gallery,\n    Gallery = _b === void 0 ? DefaultGallery : _b;\n  var imageElements = useRef([]);\n  var imageAttachmentSizeHandler = useChannelStateContext().imageAttachmentSizeHandler;\n  var _c = useState([]),\n    attachmentConfigurations = _c[0],\n    setAttachmentConfigurations = _c[1];\n  useLayoutEffect(function () {\n    if (imageElements.current && imageElements.current.every(function (element) {\n      return !!element;\n    }) && imageAttachmentSizeHandler) {\n      var newConfigurations_1 = [];\n      imageElements.current.forEach(function (element, i) {\n        var config = imageAttachmentSizeHandler(attachment.images[i], element);\n        newConfigurations_1.push(config);\n      });\n      setAttachmentConfigurations(newConfigurations_1);\n    }\n  }, [imageElements, imageAttachmentSizeHandler, attachment]);\n  var images = attachment.images.map(function (image, i) {\n    var _a, _b, _c;\n    return __assign(__assign({}, image), {\n      previewUrl: ((_a = attachmentConfigurations[i]) === null || _a === void 0 ? void 0 : _a.url) || 'about:blank',\n      style: getCssDimensionsVariables(((_b = attachment.images[i]) === null || _b === void 0 ? void 0 : _b.image_url) || ((_c = attachment.images[i]) === null || _c === void 0 ? void 0 : _c.thumb_url) || '')\n    });\n  });\n  return React.createElement(AttachmentWithinContainer, {\n    attachment: attachment,\n    componentType: 'gallery'\n  }, React.createElement(Gallery, {\n    images: images || [],\n    innerRefs: imageElements,\n    key: 'gallery'\n  }));\n};\nexport var ImageContainer = function ImageContainer(props) {\n  var attachment = props.attachment,\n    _a = props.Image,\n    Image = _a === void 0 ? DefaultImage : _a;\n  var componentType = 'image';\n  var imageElement = useRef(null);\n  var imageAttachmentSizeHandler = useChannelStateContext().imageAttachmentSizeHandler;\n  var _b = useState(undefined),\n    attachmentConfiguration = _b[0],\n    setAttachmentConfiguration = _b[1];\n  useLayoutEffect(function () {\n    if (imageElement.current && imageAttachmentSizeHandler) {\n      var config = imageAttachmentSizeHandler(attachment, imageElement.current);\n      setAttachmentConfiguration(config);\n    }\n  }, [imageElement, imageAttachmentSizeHandler, attachment]);\n  var imageConfig = __assign(__assign({}, attachment), {\n    previewUrl: (attachmentConfiguration === null || attachmentConfiguration === void 0 ? void 0 : attachmentConfiguration.url) || 'about:blank',\n    style: getCssDimensionsVariables(attachment.image_url || attachment.thumb_url || '')\n  });\n  if (attachment.actions && attachment.actions.length) {\n    return React.createElement(AttachmentWithinContainer, {\n      attachment: attachment,\n      componentType: componentType\n    }, React.createElement(\"div\", {\n      className: 'str-chat__attachment'\n    }, React.createElement(Image, __assign({}, imageConfig, {\n      innerRef: imageElement\n    })), React.createElement(AttachmentActionsContainer, __assign({}, props))));\n  }\n  return React.createElement(AttachmentWithinContainer, {\n    attachment: attachment,\n    componentType: componentType\n  }, React.createElement(Image, __assign({}, imageConfig, {\n    innerRef: imageElement\n  })));\n};\nexport var CardContainer = function CardContainer(props) {\n  var attachment = props.attachment,\n    _a = props.Card,\n    Card = _a === void 0 ? DefaultCard : _a;\n  var componentType = 'card';\n  if (attachment.actions && attachment.actions.length) {\n    return React.createElement(AttachmentWithinContainer, {\n      attachment: attachment,\n      componentType: componentType\n    }, React.createElement(\"div\", {\n      className: 'str-chat__attachment'\n    }, React.createElement(Card, __assign({}, attachment)), React.createElement(AttachmentActionsContainer, __assign({}, props))));\n  }\n  return React.createElement(AttachmentWithinContainer, {\n    attachment: attachment,\n    componentType: componentType\n  }, React.createElement(Card, __assign({}, attachment)));\n};\nexport var FileContainer = function FileContainer(_a) {\n  var attachment = _a.attachment,\n    _b = _a.File,\n    File = _b === void 0 ? DefaultFile : _b;\n  if (!attachment.asset_url) return null;\n  return React.createElement(AttachmentWithinContainer, {\n    attachment: attachment,\n    componentType: 'file'\n  }, React.createElement(File, {\n    attachment: attachment\n  }));\n};\nexport var AudioContainer = function AudioContainer(_a) {\n  var attachment = _a.attachment,\n    _b = _a.Audio,\n    Audio = _b === void 0 ? DefaultAudio : _b;\n  return React.createElement(AttachmentWithinContainer, {\n    attachment: attachment,\n    componentType: 'audio'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__attachment'\n  }, React.createElement(Audio, {\n    og: attachment\n  })));\n};\nexport var MediaContainer = function MediaContainer(props) {\n  var _a;\n  var attachment = props.attachment,\n    _b = props.Media,\n    Media = _b === void 0 ? ReactPlayer : _b;\n  var componentType = 'media';\n  var _c = useChannelStateContext(),\n    shouldGenerateVideoThumbnail = _c.shouldGenerateVideoThumbnail,\n    videoAttachmentSizeHandler = _c.videoAttachmentSizeHandler;\n  var videoElement = useRef(null);\n  var _d = useState(),\n    attachmentConfiguration = _d[0],\n    setAttachmentConfiguration = _d[1];\n  useLayoutEffect(function () {\n    if (videoElement.current && videoAttachmentSizeHandler) {\n      var config = videoAttachmentSizeHandler(attachment, videoElement.current, shouldGenerateVideoThumbnail);\n      setAttachmentConfiguration(config);\n    }\n  }, [videoElement, videoAttachmentSizeHandler, attachment]);\n  var content = React.createElement(\"div\", {\n    className: 'str-chat__player-wrapper',\n    \"data-testid\": 'video-wrapper',\n    ref: videoElement,\n    style: getCssDimensionsVariables(attachment.thumb_url || '')\n  }, React.createElement(Media, {\n    className: 'react-player',\n    config: {\n      file: {\n        attributes: {\n          poster: attachmentConfiguration === null || attachmentConfiguration === void 0 ? void 0 : attachmentConfiguration.thumbUrl\n        }\n      }\n    },\n    controls: true,\n    height: '100%',\n    url: attachmentConfiguration === null || attachmentConfiguration === void 0 ? void 0 : attachmentConfiguration.url,\n    width: '100%'\n  }));\n  return ((_a = attachment.actions) === null || _a === void 0 ? void 0 : _a.length) ? React.createElement(AttachmentWithinContainer, {\n    attachment: attachment,\n    componentType: componentType\n  }, React.createElement(\"div\", {\n    className: 'str-chat__attachment str-chat__attachment-media'\n  }, content, React.createElement(AttachmentActionsContainer, __assign({}, props)))) : React.createElement(AttachmentWithinContainer, {\n    attachment: attachment,\n    componentType: componentType\n  }, content);\n};\nexport var UnsupportedAttachmentContainer = function UnsupportedAttachmentContainer(_a) {\n  var attachment = _a.attachment,\n    _b = _a.UnsupportedAttachment,\n    UnsupportedAttachment = _b === void 0 ? DefaultUnsupportedAttachment : _b;\n  return React.createElement(React.Fragment, null, React.createElement(UnsupportedAttachment, {\n    attachment: attachment\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}