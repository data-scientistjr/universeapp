{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport throttle from 'lodash.throttle';\nimport { useChannelActionContext } from '../../../context/ChannelActionContext';\nimport { useChannelStateContext } from '../../../context/ChannelStateContext';\nimport { useChatContext } from '../../../context/ChatContext';\nexport var reactionHandlerWarning = \"Reaction handler was called, but it is missing one of its required arguments.\\nMake sure the ChannelAction and ChannelState contexts are properly set and the hook is initialized with a valid message.\";\nexport var useReactionHandler = function useReactionHandler(message) {\n  var updateMessage = useChannelActionContext('useReactionHandler').updateMessage;\n  var channel = useChannelStateContext('useReactionHandler').channel;\n  var client = useChatContext('useReactionHandler').client;\n  var createMessagePreview = useCallback(function (add, reaction, message) {\n    var _a, _b;\n    var newReactionCounts = (message === null || message === void 0 ? void 0 : message.reaction_counts) || {};\n    var reactionType = reaction.type;\n    var hasReaction = !!newReactionCounts[reactionType];\n    if (add) {\n      newReactionCounts[reactionType] = hasReaction ? newReactionCounts[reactionType] + 1 : 1;\n    } else {\n      if (hasReaction && newReactionCounts[reactionType] > 1) {\n        newReactionCounts[reactionType]--;\n      } else {\n        delete newReactionCounts[reactionType];\n      }\n    }\n    var newReactions = add ? __spreadArray([reaction], (message === null || message === void 0 ? void 0 : message.latest_reactions) || [], true) : (_a = message.latest_reactions) === null || _a === void 0 ? void 0 : _a.filter(function (item) {\n      return !(item.type === reaction.type && item.user_id === reaction.user_id);\n    });\n    var newOwnReactions = add ? __spreadArray([reaction], (message === null || message === void 0 ? void 0 : message.own_reactions) || [], true) : (_b = message === null || message === void 0 ? void 0 : message.own_reactions) === null || _b === void 0 ? void 0 : _b.filter(function (item) {\n      return item.type !== reaction.type;\n    });\n    return __assign(__assign({}, message), {\n      latest_reactions: newReactions || message.latest_reactions,\n      own_reactions: newOwnReactions,\n      reaction_counts: newReactionCounts,\n      reaction_scores: newReactionCounts\n    });\n  }, [client.user, client.userID]);\n  var creatReactionPreview = function creatReactionPreview(type) {\n    var _a;\n    return {\n      message_id: message === null || message === void 0 ? void 0 : message.id,\n      score: 1,\n      type: type,\n      user: client.user,\n      user_id: (_a = client.user) === null || _a === void 0 ? void 0 : _a.id\n    };\n  };\n  var toggleReaction = throttle(function (id, type, add) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var newReaction, tempMessage, messageResponse, _a, error_1;\n      var _b;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            if (!message || ((_b = channel.data) === null || _b === void 0 ? void 0 : _b.frozen)) return [2 /*return*/];\n            newReaction = creatReactionPreview(type);\n            tempMessage = createMessagePreview(add, newReaction, message);\n            _c.label = 1;\n          case 1:\n            _c.trys.push([1, 6,, 7]);\n            updateMessage(tempMessage);\n            if (!add) return [3 /*break*/, 3];\n            return [4 /*yield*/, channel.sendReaction(id, {\n              type: type\n            })];\n          case 2:\n            _a = _c.sent();\n            return [3 /*break*/, 5];\n          case 3:\n            return [4 /*yield*/, channel.deleteReaction(id, type)];\n          case 4:\n            _a = _c.sent();\n            _c.label = 5;\n          case 5:\n            messageResponse = _a;\n            updateMessage(messageResponse.message);\n            return [3 /*break*/, 7];\n          case 6:\n            error_1 = _c.sent();\n            // revert to the original message if the API call fails\n            updateMessage(message);\n            return [3 /*break*/, 7];\n          case 7:\n            return [2 /*return*/];\n        }\n      });\n    });\n  }, 1000);\n  return function (reactionType, event) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var userExistingReaction, error_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (event === null || event === void 0 ? void 0 : event.preventDefault) {\n              event.preventDefault();\n            }\n            if (!message) {\n              return [2 /*return*/, console.warn(reactionHandlerWarning)];\n            }\n            userExistingReaction = null;\n            if (message.own_reactions) {\n              message.own_reactions.forEach(function (reaction) {\n                // own user should only ever contain the current user id\n                // just in case we check to prevent bugs with message updates from breaking reactions\n                if (reaction.user && client.userID === reaction.user.id && reaction.type === reactionType) {\n                  userExistingReaction = reaction;\n                } else if (reaction.user && client.userID !== reaction.user.id) {\n                  console.warn(\"message.own_reactions contained reactions from a different user, this indicates a bug\");\n                }\n              });\n            }\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 6,, 7]);\n            if (!userExistingReaction) return [3 /*break*/, 3];\n            return [4 /*yield*/, toggleReaction(message.id, userExistingReaction.type, false)];\n          case 2:\n            _a.sent();\n            return [3 /*break*/, 5];\n          case 3:\n            return [4 /*yield*/, toggleReaction(message.id, reactionType, true)];\n          case 4:\n            _a.sent();\n            _a.label = 5;\n          case 5:\n            return [3 /*break*/, 7];\n          case 6:\n            error_2 = _a.sent();\n            console.log({\n              error: error_2\n            });\n            return [3 /*break*/, 7];\n          case 7:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n};\n\nexport var useReactionClick = function useReactionClick(message, reactionSelectorRef, messageWrapperRef, closeReactionSelectorOnClick) {\n  var _a;\n  var _b = useChannelStateContext('useReactionClick'),\n    channel = _b.channel,\n    _c = _b.channelCapabilities,\n    channelCapabilities = _c === void 0 ? {} : _c,\n    channelConfig = _b.channelConfig;\n  var _d = useState(false),\n    showDetailedReactions = _d[0],\n    setShowDetailedReactions = _d[1];\n  var hasListener = useRef(false);\n  var isFrozen = !!((_a = channel.data) === null || _a === void 0 ? void 0 : _a.frozen);\n  var isReactionEnabled = (channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.reactions) !== false && channelCapabilities['send-reaction'] || isFrozen;\n  var messageDeleted = !!(message === null || message === void 0 ? void 0 : message.deleted_at);\n  var closeDetailedReactions = useCallback(function (event) {\n    var _a;\n    if (event.target instanceof HTMLElement && ((_a = reactionSelectorRef === null || reactionSelectorRef === void 0 ? void 0 : reactionSelectorRef.current) === null || _a === void 0 ? void 0 : _a.contains(event.target)) && !closeReactionSelectorOnClick) {\n      return;\n    }\n    setShowDetailedReactions(false);\n  }, [setShowDetailedReactions, reactionSelectorRef]);\n  useEffect(function () {\n    var messageWrapper = messageWrapperRef === null || messageWrapperRef === void 0 ? void 0 : messageWrapperRef.current;\n    if (showDetailedReactions && !hasListener.current) {\n      hasListener.current = true;\n      document.addEventListener('click', closeDetailedReactions);\n      if (messageWrapper) {\n        messageWrapper.addEventListener('mouseleave', closeDetailedReactions);\n      }\n    }\n    if (!showDetailedReactions && hasListener.current) {\n      document.removeEventListener('click', closeDetailedReactions);\n      if (messageWrapper) {\n        messageWrapper.removeEventListener('mouseleave', closeDetailedReactions);\n      }\n      hasListener.current = false;\n    }\n    return function () {\n      if (hasListener.current) {\n        document.removeEventListener('click', closeDetailedReactions);\n        if (messageWrapper) {\n          messageWrapper.removeEventListener('mouseleave', closeDetailedReactions);\n        }\n        hasListener.current = false;\n      }\n    };\n  }, [showDetailedReactions, closeDetailedReactions, messageWrapperRef]);\n  useEffect(function () {\n    var messageWrapper = messageWrapperRef === null || messageWrapperRef === void 0 ? void 0 : messageWrapperRef.current;\n    if (messageDeleted && hasListener.current) {\n      document.removeEventListener('click', closeDetailedReactions);\n      if (messageWrapper) {\n        messageWrapper.removeEventListener('mouseleave', closeDetailedReactions);\n      }\n      hasListener.current = false;\n    }\n  }, [messageDeleted, closeDetailedReactions, messageWrapperRef]);\n  var onReactionListClick = function onReactionListClick(event) {\n    if (event === null || event === void 0 ? void 0 : event.stopPropagation) {\n      event.stopPropagation();\n    }\n    setShowDetailedReactions(function (prev) {\n      return !prev;\n    });\n  };\n  return {\n    isReactionEnabled: isReactionEnabled,\n    onReactionListClick: onReactionListClick,\n    showDetailedReactions: showDetailedReactions\n  };\n};","map":null,"metadata":{},"sourceType":"module"}