{"ast":null,"code":"import React, { useCallback } from 'react';\nimport { LoadingIndicator } from './LoadingIndicator';\nimport { Thumbnail } from './Thumbnail';\nimport { ThumbnailPlaceholder } from './ThumbnailPlaceholder';\nimport { RetryIcon } from './RetryIcon';\nexport var ImagePreviewer = function ImagePreviewer(_a) {\n  var _b = _a.multiple,\n    multiple = _b === void 0 ? true : _b,\n    _c = _a.disabled,\n    disabled = _c === void 0 ? false : _c,\n    imageUploads = _a.imageUploads,\n    handleRemove = _a.handleRemove,\n    handleRetry = _a.handleRetry,\n    handleFiles = _a.handleFiles;\n  var onClose = useCallback(function (id, event) {\n    if (!id) return console.warn(\"image.id of closed image was \\\"null\\\", this shouldn't happen\");\n    handleRemove === null || handleRemove === void 0 ? void 0 : handleRemove(id, event);\n  }, [handleRemove]);\n  return React.createElement(\"div\", {\n    className: \"rfu-image-previewer\"\n  }, imageUploads === null || imageUploads === void 0 ? void 0 : imageUploads.map(function (image) {\n    var url = image.url || image.previewUri;\n    return React.createElement(\"div\", {\n      key: image.id,\n      className: \"rfu-image-previewer__image\" + (image.state === 'finished' ? ' rfu-image-previewer__image--loaded' : '')\n    }, image.state === 'failed' && React.createElement(\"button\", {\n      type: \"button\",\n      \"aria-label\": \"Retry upload\",\n      className: \"rfu-image-previewer__retry\",\n      onClick: function onClick(event) {\n        return handleRetry === null || handleRetry === void 0 ? void 0 : handleRetry(image.id, event);\n      }\n    }, React.createElement(RetryIcon, null)), url && React.createElement(Thumbnail, {\n      handleClose: function handleClose(event) {\n        return onClose(image.id, event);\n      },\n      image: url\n    }), image.state === 'uploading' && React.createElement(LoadingIndicator, {\n      backgroundColor: \"#ffffff19\",\n      color: \"#ffffffb2\"\n    }));\n  }), handleFiles && !disabled && React.createElement(ThumbnailPlaceholder, {\n    handleFiles: handleFiles,\n    multiple: multiple\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}