{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _svgs = require(\"../svgs\");\nvar _nimbleEmojiIndex = _interopRequireDefault(require(\"../utils/emoji-index/nimble-emoji-index\"));\nvar _index = require(\"../utils/index\");\nvar id = 0;\nvar Search = /*#__PURE__*/\nfunction (_React$PureComponent) {\n  (0, _inherits2[\"default\"])(Search, _React$PureComponent);\n  function Search(props) {\n    var _this;\n    (0, _classCallCheck2[\"default\"])(this, Search);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(Search).call(this, props));\n    _this.state = {\n      icon: _svgs.search.search,\n      isSearching: false,\n      id: ++id\n    };\n    _this.data = props.data;\n    _this.emojiIndex = new _nimbleEmojiIndex[\"default\"](_this.data);\n    _this.setRef = _this.setRef.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.clear = _this.clear.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleKeyUp = _this.handleKeyUp.bind((0, _assertThisInitialized2[\"default\"])(_this)); // throttle keyboard input so that typing isn't delayed\n\n    _this.handleChange = (0, _index.throttleIdleTask)(_this.handleChange.bind((0, _assertThisInitialized2[\"default\"])(_this)));\n    return _this;\n  }\n  (0, _createClass2[\"default\"])(Search, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // in some cases (e.g. preact) the input may already be pre-populated\n      // this.input is undefined in Jest tests\n      if (this.input && this.input.value) {\n        this.search(this.input.value);\n      }\n    }\n  }, {\n    key: \"search\",\n    value: function search(value) {\n      if (value == '') this.setState({\n        icon: _svgs.search.search,\n        isSearching: false\n      });else this.setState({\n        icon: _svgs.search[\"delete\"],\n        isSearching: true\n      });\n      this.props.onSearch(this.emojiIndex.search(value, {\n        emojisToShowFilter: this.props.emojisToShowFilter,\n        maxResults: this.props.maxResults,\n        include: this.props.include,\n        exclude: this.props.exclude,\n        custom: this.props.custom\n      }));\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      if (this.input.value == '') return;\n      this.input.value = '';\n      this.input.focus();\n      this.search('');\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange() {\n      if (this.input) {\n        this.search(this.input.value);\n      }\n    }\n  }, {\n    key: \"handleKeyUp\",\n    value: function handleKeyUp(e) {\n      if (e.keyCode === 13) {\n        this.clear();\n      }\n    }\n  }, {\n    key: \"setRef\",\n    value: function setRef(c) {\n      this.input = c;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        i18n = _this$props.i18n,\n        autoFocus = _this$props.autoFocus;\n      var _this$state = this.state,\n        icon = _this$state.icon,\n        isSearching = _this$state.isSearching,\n        id = _this$state.id;\n      var inputId = \"emoji-mart-search-\".concat(id);\n      return _react[\"default\"].createElement(\"section\", {\n        className: \"emoji-mart-search\",\n        \"aria-label\": i18n.search\n      }, _react[\"default\"].createElement(\"input\", {\n        id: inputId,\n        ref: this.setRef,\n        type: \"search\",\n        onChange: this.handleChange,\n        placeholder: i18n.search,\n        autoFocus: autoFocus\n      }), _react[\"default\"].createElement(\"label\", {\n        className: \"emoji-mart-sr-only\",\n        htmlFor: inputId\n      }, i18n.search), _react[\"default\"].createElement(\"button\", {\n        className: \"emoji-mart-search-icon\",\n        onClick: this.clear,\n        onKeyUp: this.handleKeyUp,\n        \"aria-label\": i18n.clear,\n        disabled: !isSearching\n      }, icon()));\n    }\n  }]);\n  return Search;\n}(_react[\"default\"].PureComponent);\nexports[\"default\"] = Search;\nSearch.propTypes\n/* remove-proptypes */ = {\n  onSearch: _propTypes[\"default\"].func,\n  maxResults: _propTypes[\"default\"].number,\n  emojisToShowFilter: _propTypes[\"default\"].func,\n  autoFocus: _propTypes[\"default\"].bool\n};\nSearch.defaultProps = {\n  onSearch: function onSearch() {},\n  maxResults: 75,\n  emojisToShowFilter: null,\n  autoFocus: false\n};","map":null,"metadata":{},"sourceType":"script"}