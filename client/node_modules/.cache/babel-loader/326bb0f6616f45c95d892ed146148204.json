{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport React, { useState } from 'react';\nimport { sanitizeUrl } from '@braintree/sanitize-url';\nimport { Modal } from '../Modal';\nimport { ModalGallery as DefaultModalGallery } from './ModalGallery';\nimport { useComponentContext } from '../../context';\n/**\n * A simple component that displays an image.\n */\nexport var ImageComponent = function ImageComponent(props) {\n  var _a = props.dimensions,\n    dimensions = _a === void 0 ? {} : _a,\n    fallback = props.fallback,\n    image_url = props.image_url,\n    thumb_url = props.thumb_url,\n    innerRef = props.innerRef,\n    previewUrl = props.previewUrl,\n    style = props.style;\n  var _b = useState(false),\n    modalIsOpen = _b[0],\n    setModalIsOpen = _b[1];\n  var _c = useComponentContext('ImageComponent').ModalGallery,\n    ModalGallery = _c === void 0 ? DefaultModalGallery : _c;\n  var imageSrc = sanitizeUrl(previewUrl || image_url || thumb_url);\n  var toggleModal = function toggleModal() {\n    return setModalIsOpen(function (modalIsOpen) {\n      return !modalIsOpen;\n    });\n  };\n  return React.createElement(React.Fragment, null, React.createElement(\"img\", __assign({\n    alt: fallback,\n    className: 'str-chat__message-attachment--img',\n    \"data-testid\": 'image-test',\n    onClick: toggleModal,\n    src: imageSrc,\n    style: style,\n    tabIndex: 0\n  }, dimensions, innerRef && {\n    ref: innerRef\n  })), React.createElement(Modal, {\n    onClose: toggleModal,\n    open: modalIsOpen\n  }, React.createElement(ModalGallery, {\n    images: [props],\n    index: 0\n  })));\n};","map":null,"metadata":{},"sourceType":"module"}