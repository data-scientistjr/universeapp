{"ast":null,"code":"'use strict';\n\nvar hasOwnProperty = require('../constant/has-own-property.js');\nvar chunkedSplice = require('./chunked-splice.js');\nvar miniflat = require('./miniflat.js');\nfunction combineExtensions(extensions) {\n  var all = {};\n  var index = -1;\n  while (++index < extensions.length) {\n    extension(all, extensions[index]);\n  }\n  return all;\n}\nfunction extension(all, extension) {\n  var hook;\n  var left;\n  var right;\n  var code;\n  for (hook in extension) {\n    left = hasOwnProperty.call(all, hook) ? all[hook] : all[hook] = {};\n    right = extension[hook];\n    for (code in right) {\n      left[code] = constructs(miniflat(right[code]), hasOwnProperty.call(left, code) ? left[code] : []);\n    }\n  }\n}\nfunction constructs(list, existing) {\n  var index = -1;\n  var before = [];\n  while (++index < list.length) {\n    ;\n    (list[index].add === 'after' ? existing : before).push(list[index]);\n  }\n  chunkedSplice(existing, 0, 0, before);\n  return existing;\n}\nmodule.exports = combineExtensions;","map":null,"metadata":{},"sourceType":"script"}