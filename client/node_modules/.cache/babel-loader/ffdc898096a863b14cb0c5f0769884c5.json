{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nexport var accentsMap = {\n  a: 'á|à|ã|â|À|Á|Ã|Â',\n  c: 'ç|Ç',\n  e: 'é|è|ê|É|È|Ê',\n  i: 'í|ì|î|Í|Ì|Î',\n  n: 'ñ|Ñ',\n  o: 'ó|ò|ô|ő|õ|Ó|Ò|Ô|Õ',\n  u: 'ú|ù|û|ü|Ú|Ù|Û|Ü'\n};\nexport var removeDiacritics = function removeDiacritics(text) {\n  if (!text) return '';\n  return Object.keys(accentsMap).reduce(function (acc, current) {\n    return acc.replace(new RegExp(accentsMap[current], 'g'), current);\n  }, text);\n};\nexport var calculateLevenshtein = function calculateLevenshtein(query, name) {\n  if (query.length === 0) return name.length;\n  if (name.length === 0) return query.length;\n  var matrix = [];\n  var i;\n  for (i = 0; i <= name.length; i++) {\n    matrix[i] = [i];\n  }\n  var j;\n  for (j = 0; j <= query.length; j++) {\n    matrix[0][j] = j;\n  }\n  for (i = 1; i <= name.length; i++) {\n    for (j = 1; j <= query.length; j++) {\n      if (name.charAt(i - 1) === query.charAt(j - 1)) {\n        matrix[i][j] = matrix[i - 1][j - 1];\n      } else {\n        matrix[i][j] = Math.min(matrix[i - 1][j - 1] + 1,\n        // substitution\n        Math.min(matrix[i][j - 1] + 1,\n        // insertion\n        matrix[i - 1][j] + 1)); // deletion\n      }\n    }\n  }\n\n  return matrix[name.length][query.length];\n};\nexport var searchLocalUsers = function searchLocalUsers(params) {\n  var ownUserId = params.ownUserId,\n    query = params.query,\n    text = params.text,\n    useMentionsTransliteration = params.useMentionsTransliteration,\n    users = params.users;\n  var matchingUsers = users.filter(function (user) {\n    if (user.id === ownUserId) return false;\n    if (!query) return true;\n    var updatedId = removeDiacritics(user.id).toLowerCase();\n    var updatedName = removeDiacritics(user.name).toLowerCase();\n    var updatedQuery = removeDiacritics(query).toLowerCase();\n    if (useMentionsTransliteration) {\n      (function () {\n        return __awaiter(void 0, void 0, void 0, function () {\n          var transliterate;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                return [4 /*yield*/, import('@stream-io/transliterate')];\n              case 1:\n                transliterate = _a.sent().default;\n                updatedName = transliterate(user.name || '').toLowerCase();\n                updatedQuery = transliterate(query).toLowerCase();\n                updatedId = transliterate(user.id).toLowerCase();\n                return [2 /*return*/];\n            }\n          });\n        });\n      })();\n    }\n\n    var maxDistance = 3;\n    var lastDigits = text.slice(-(maxDistance + 1)).includes('@');\n    if (updatedName) {\n      var levenshtein_1 = calculateLevenshtein(updatedQuery, updatedName);\n      if (updatedName.includes(updatedQuery) || levenshtein_1 <= maxDistance && lastDigits) {\n        return true;\n      }\n    }\n    var levenshtein = calculateLevenshtein(updatedQuery, updatedId);\n    return updatedId.includes(updatedQuery) || levenshtein <= maxDistance && lastDigits;\n  });\n  return matchingUsers;\n};\nexport var checkUploadPermissions = function checkUploadPermissions(params) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var addNotification, file, getAppSettings, t, uploadType, appSettings, _a, allowed_file_extensions, allowed_mime_types, blocked_file_extensions, blocked_mime_types, sendErrorNotification, allowed, blocked, allowed, blocked;\n    var _b, _c;\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          addNotification = params.addNotification, file = params.file, getAppSettings = params.getAppSettings, t = params.t, uploadType = params.uploadType;\n          appSettings = null;\n          return [4 /*yield*/, getAppSettings()];\n        case 1:\n          appSettings = _d.sent();\n          _a = (uploadType === 'image' ? (_b = appSettings === null || appSettings === void 0 ? void 0 : appSettings.app) === null || _b === void 0 ? void 0 : _b.image_upload_config : (_c = appSettings === null || appSettings === void 0 ? void 0 : appSettings.app) === null || _c === void 0 ? void 0 : _c.file_upload_config) || {}, allowed_file_extensions = _a.allowed_file_extensions, allowed_mime_types = _a.allowed_mime_types, blocked_file_extensions = _a.blocked_file_extensions, blocked_mime_types = _a.blocked_mime_types;\n          sendErrorNotification = function sendErrorNotification() {\n            return addNotification(t(\"Upload type: \\\"{{ type }}\\\" is not allowed\", {\n              type: file.type || 'unknown type'\n            }), 'error');\n          };\n          if (allowed_file_extensions === null || allowed_file_extensions === void 0 ? void 0 : allowed_file_extensions.length) {\n            allowed = allowed_file_extensions.some(function (ext) {\n              return file.name.toLowerCase().endsWith(ext.toLowerCase());\n            });\n            if (!allowed) {\n              sendErrorNotification();\n              return [2 /*return*/, false];\n            }\n          }\n          if (blocked_file_extensions === null || blocked_file_extensions === void 0 ? void 0 : blocked_file_extensions.length) {\n            blocked = blocked_file_extensions.some(function (ext) {\n              return file.name.toLowerCase().endsWith(ext.toLowerCase());\n            });\n            if (blocked) {\n              sendErrorNotification();\n              return [2 /*return*/, false];\n            }\n          }\n          if (allowed_mime_types === null || allowed_mime_types === void 0 ? void 0 : allowed_mime_types.length) {\n            allowed = allowed_mime_types.some(function (type) {\n              var _a;\n              return type.toLowerCase() === ((_a = file.type) === null || _a === void 0 ? void 0 : _a.toLowerCase());\n            });\n            if (!allowed) {\n              sendErrorNotification();\n              return [2 /*return*/, false];\n            }\n          }\n          if (blocked_mime_types === null || blocked_mime_types === void 0 ? void 0 : blocked_mime_types.length) {\n            blocked = blocked_mime_types.some(function (type) {\n              var _a;\n              return type.toLowerCase() === ((_a = file.type) === null || _a === void 0 ? void 0 : _a.toLowerCase());\n            });\n            if (blocked) {\n              sendErrorNotification();\n              return [2 /*return*/, false];\n            }\n          }\n          return [2 /*return*/, true];\n      }\n    });\n  });\n};","map":null,"metadata":{},"sourceType":"module"}