{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport React from 'react';\nimport { FileIcon } from './FileIcon';\nimport { LoadingIndicator } from './LoadingIndicator';\n/**\n * Component that displays files which are being uploaded\n */\nexport var FilePreviewer = function FilePreviewer(_a) {\n  var _b = _a.fileIconProps,\n    fileIconProps = _b === void 0 ? {} : _b,\n    uploads = _a.uploads,\n    handleRemove = _a.handleRemove,\n    handleRetry = _a.handleRetry;\n  return React.createElement(\"div\", {\n    className: \"rfu-file-previewer\"\n  }, React.createElement(\"ol\", null, uploads === null || uploads === void 0 ? void 0 : uploads.map(function (upload) {\n    return React.createElement(\"li\", {\n      key: upload.id,\n      className: \"rfu-file-previewer__file \" + (upload.state === 'uploading' ? 'rfu-file-previewer__file--uploading' : '') + \" \" + (upload.state === 'failed' ? 'rfu-file-previewer__file--failed' : '')\n    }, React.createElement(FileIcon, __assign({\n      mimeType: upload.file.type\n    }, fileIconProps)), React.createElement(\"a\", {\n      href: upload.url,\n      download: true\n    }, upload.file.name, upload.state === 'failed' && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"rfu-file-previewer__failed\",\n      onClick: function onClick() {\n        return handleRetry === null || handleRetry === void 0 ? void 0 : handleRetry(upload.id);\n      }\n    }, \"failed\"), React.createElement(\"div\", {\n      className: \"rfu-file-previewer__retry\",\n      onClick: function onClick() {\n        return handleRetry === null || handleRetry === void 0 ? void 0 : handleRetry(upload.id);\n      }\n    }, \"retry\"))), React.createElement(\"span\", {\n      className: \"rfu-file-previewer__close-button\",\n      onClick: handleRemove && function () {\n        return handleRemove(upload.id);\n      }\n    }, \"\\u2718\"), upload.state === 'uploading' && React.createElement(\"div\", {\n      className: \"rfu-file-previewer__loading-indicator\"\n    }, React.createElement(LoadingIndicator, null)));\n  })));\n};","map":null,"metadata":{},"sourceType":"module"}